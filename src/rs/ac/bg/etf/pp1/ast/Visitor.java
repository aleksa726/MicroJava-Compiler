// generated with ast extension for cup
// version 0.8
// 21/5/2022 22:52:9


package rs.ac.bg.etf.pp1.ast;

public interface Visitor { 

    public void visit(Expop Expop);
    public void visit(MethodDecl MethodDecl);
    public void visit(ClassExtend ClassExtend);
    public void visit(Mulop Mulop);
    public void visit(VarDeclaration VarDeclaration);
    public void visit(Constant Constant);
    public void visit(ExprDecl ExprDecl);
    public void visit(Relop Relop);
    public void visit(Assignop Assignop);
    public void visit(TypeVoid TypeVoid);
    public void visit(AssignDesignator AssignDesignator);
    public void visit(StatementList StatementList);
    public void visit(FormParsAndVarArgs FormParsAndVarArgs);
    public void visit(Addop Addop);
    public void visit(RecordDecl RecordDecl);
    public void visit(NumConstOpt NumConstOpt);
    public void visit(Factor Factor);
    public void visit(ExprOpt ExprOpt);
    public void visit(CondTerm CondTerm);
    public void visit(DeclList DeclList);
    public void visit(Designator Designator);
    public void visit(Term Term);
    public void visit(Condition Condition);
    public void visit(ConstDeclList ConstDeclList);
    public void visit(ActParsList ActParsList);
    public void visit(IfCondition IfCondition);
    public void visit(FormalParam FormalParam);
    public void visit(FormalParamList FormalParamList);
    public void visit(VarDeclList VarDeclList);
    public void visit(Expr Expr);
    public void visit(VarListOpt VarListOpt);
    public void visit(ActPars ActPars);
    public void visit(VarArgs VarArgs);
    public void visit(DesignatorStatement DesignatorStatement);
    public void visit(Decl Decl);
    public void visit(Statement Statement);
    public void visit(BaseExp BaseExp);
    public void visit(ElseStatementOpt ElseStatementOpt);
    public void visit(CondFact CondFact);
    public void visit(IfStatement IfStatement);
    public void visit(MethodDeclList MethodDeclList);
    public void visit(FormPars FormPars);
    public void visit(ClassMethods ClassMethods);
    public void visit(MulopMod MulopMod);
    public void visit(MulopDiv MulopDiv);
    public void visit(MulopMul MulopMul);
    public void visit(AddopMinus AddopMinus);
    public void visit(AddopPlus AddopPlus);
    public void visit(RelopLTE RelopLTE);
    public void visit(RelopLT RelopLT);
    public void visit(RelopGTE RelopGTE);
    public void visit(RelopGT RelopGT);
    public void visit(RelopNotEqual RelopNotEqual);
    public void visit(RelopEqual RelopEqual);
    public void visit(AssignopDecl AssignopDecl);
    public void visit(DesignatorName DesignatorName);
    public void visit(FieldDesignator FieldDesignator);
    public void visit(ArrayDesignator ArrayDesignator);
    public void visit(OnlyIdent OnlyIdent);
    public void visit(ExprFactor ExprFactor);
    public void visit(NewExpr NewExpr);
    public void visit(NewArrayExpr NewArrayExpr);
    public void visit(BoolFactor BoolFactor);
    public void visit(CharFactor CharFactor);
    public void visit(NumberFactor NumberFactor);
    public void visit(FunctionCall FunctionCall);
    public void visit(Var Var);
    public void visit(ExpopDecl ExpopDecl);
    public void visit(SingleFactorDecl SingleFactorDecl);
    public void visit(FactorDecls FactorDecls);
    public void visit(SingleTermDeclaration SingleTermDeclaration);
    public void visit(TermDeclaration TermDeclaration);
    public void visit(NoExpr NoExpr);
    public void visit(ExprDeclaration ExprDeclaration);
    public void visit(NoMinus NoMinus);
    public void visit(MinusOpt MinusOpt);
    public void visit(MinusExprDeclaration MinusExprDeclaration);
    public void visit(CondFactExpresions CondFactExpresions);
    public void visit(CondFactDeclaration CondFactDeclaration);
    public void visit(SingleCondTermDeclaration SingleCondTermDeclaration);
    public void visit(CondTermDeclaration CondTermDeclaration);
    public void visit(SingleConditionDeclaration SingleConditionDeclaration);
    public void visit(ConditionDeclaration ConditionDeclaration);
    public void visit(ActualParam ActualParam);
    public void visit(ActualParams ActualParams);
    public void visit(NoActParsListDeclaration NoActParsListDeclaration);
    public void visit(ActParsListDeclaration ActParsListDeclaration);
    public void visit(MethodCallDesignator MethodCallDesignator);
    public void visit(AssignError AssignError);
    public void visit(AssignDesignatorDecl AssignDesignatorDecl);
    public void visit(DesignatorStatementDEC DesignatorStatementDEC);
    public void visit(DesignatorStatementINC DesignatorStatementINC);
    public void visit(DesignatorStatementPars DesignatorStatementPars);
    public void visit(DesignatorStatementAssign DesignatorStatementAssign);
    public void visit(DoCond DoCond);
    public void visit(DoCondition DoCondition);
    public void visit(While While);
    public void visit(Do Do);
    public void visit(DoStatement DoStatement);
    public void visit(NoNumConstOpt NoNumConstOpt);
    public void visit(NumConstOptDecl NumConstOptDecl);
    public void visit(NoExprOpt NoExprOpt);
    public void visit(ExprOptDecl ExprOptDecl);
    public void visit(ElseAdr ElseAdr);
    public void visit(ElseStatementDecl ElseStatementDecl);
    public void visit(ErrorIfCondition ErrorIfCondition);
    public void visit(IfConditionDecl IfConditionDecl);
    public void visit(IfElseStatementDecl IfElseStatementDecl);
    public void visit(IfStatementDecl IfStatementDecl);
    public void visit(ListOfStatements ListOfStatements);
    public void visit(PrintStmt PrintStmt);
    public void visit(ReadStatement ReadStatement);
    public void visit(ReturnVoidStatement ReturnVoidStatement);
    public void visit(ReturnStatement ReturnStatement);
    public void visit(ContinueStatement ContinueStatement);
    public void visit(BreakStatement BreakStatement);
    public void visit(DoWhileStatement DoWhileStatement);
    public void visit(IfElseStatement IfElseStatement);
    public void visit(StatementDesignatorStatement StatementDesignatorStatement);
    public void visit(NoStatementList NoStatementList);
    public void visit(StatementListDecl StatementListDecl);
    public void visit(ErrorFormalParam ErrorFormalParam);
    public void visit(FormalParamArray FormalParamArray);
    public void visit(FormalParamDeclaration FormalParamDeclaration);
    public void visit(SingleFormalParamDecl SingleFormalParamDecl);
    public void visit(FormalParamListDecl FormalParamListDecl);
    public void visit(NoFormParam NoFormParam);
    public void visit(FormParams FormParams);
    public void visit(VoidType VoidType);
    public void visit(MethodType MethodType);
    public void visit(VarArgsDecl VarArgsDecl);
    public void visit(NoFormParsAndVarArgs NoFormParsAndVarArgs);
    public void visit(FormParsAndVarArgsDecl FormParsAndVarArgsDecl);
    public void visit(OnlyFormalParam OnlyFormalParam);
    public void visit(OnlyVarArgs OnlyVarArgs);
    public void visit(MethodTypeName MethodTypeName);
    public void visit(MethodDeclaration MethodDeclaration);
    public void visit(NoMethodDecl NoMethodDecl);
    public void visit(MethodListDecl MethodListDecl);
    public void visit(Type Type);
    public void visit(RecordName RecordName);
    public void visit(RecordDeclaration RecordDeclaration);
    public void visit(NoClassMethods NoClassMethods);
    public void visit(ClassMethodsDecl ClassMethodsDecl);
    public void visit(ClassExtensionType ClassExtensionType);
    public void visit(NoClassExtends NoClassExtends);
    public void visit(ClassExtends ClassExtends);
    public void visit(ClassName ClassName);
    public void visit(ClassDecl ClassDecl);
    public void visit(ErrorVar ErrorVar);
    public void visit(ArrayDeclaration ArrayDeclaration);
    public void visit(VarDeclarationDecl VarDeclarationDecl);
    public void visit(SingleVarDeclaration SingleVarDeclaration);
    public void visit(VarDeclarationList VarDeclarationList);
    public void visit(VarType VarType);
    public void visit(VarDecl VarDecl);
    public void visit(NoVarList NoVarList);
    public void visit(VarList VarList);
    public void visit(BoolConst BoolConst);
    public void visit(CharConst CharConst);
    public void visit(NumConst NumConst);
    public void visit(SingleConstDeclaration SingleConstDeclaration);
    public void visit(ConstDeclarationList ConstDeclarationList);
    public void visit(ConstType ConstType);
    public void visit(ConstDecl ConstDecl);
    public void visit(RecordDeclar RecordDeclar);
    public void visit(ClassDeclar ClassDeclar);
    public void visit(VarDeclar VarDeclar);
    public void visit(ConstDeclar ConstDeclar);
    public void visit(NoDeclLists NoDeclLists);
    public void visit(DeclLists DeclLists);
    public void visit(ProgramName ProgramName);
    public void visit(Program Program);

}
