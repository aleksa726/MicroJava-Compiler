INFO  00:41:15,119 - Compiling source file: C:\Users\Aleksa\Desktop\PP Projekat\MJCompiler\test\program.mj
INFO  00:41:15,167 - #2 program
INFO  00:41:15,167 - #46 MJProgram
INFO  00:41:15,167 - #46 int
INFO  00:41:15,168 - #46 x
INFO  00:41:15,169 - #5 ;
INFO  00:41:15,169 - #17 class
INFO  00:41:15,170 - #46 Klasa1
INFO  00:41:15,170 - #3 {
INFO  00:41:15,171 - #4 }
INFO  00:41:15,172 - #19 record
INFO  00:41:15,172 - #46 Rec
INFO  00:41:15,172 - #3 {
INFO  00:41:15,173 - #46 int
INFO  00:41:15,173 - #46 recFld
INFO  00:41:15,173 - #5 ;
INFO  00:41:15,173 - #46 char
INFO  00:41:15,173 - #46 recFldChar
INFO  00:41:15,173 - #5 ;
INFO  00:41:15,173 - #46 int
INFO  00:41:15,174 - #46 arrRec
INFO  00:41:15,174 - #15 [
INFO  00:41:15,174 - #16 ]
INFO  00:41:15,174 - #5 ;
INFO  00:41:15,174 - #4 }
INFO  00:41:15,174 - #19 record
INFO  00:41:15,174 - #46 Rec2
INFO  00:41:15,174 - #3 {
INFO  00:41:15,175 - #46 int
INFO  00:41:15,175 - #46 recFld
INFO  00:41:15,175 - #5 ;
INFO  00:41:15,175 - #46 char
INFO  00:41:15,175 - #46 recFldChar
INFO  00:41:15,175 - #5 ;
INFO  00:41:15,175 - #46 int
INFO  00:41:15,175 - #46 arrRec
INFO  00:41:15,175 - #15 [
INFO  00:41:15,175 - #16 ]
INFO  00:41:15,175 - #5 ;
INFO  00:41:15,175 - #4 }
INFO  00:41:15,175 - #17 class
INFO  00:41:15,175 - #46 Klasa
INFO  00:41:15,175 - #18 extends
INFO  00:41:15,176 - #46 Klasa1
INFO  00:41:15,176 - #3 {
INFO  00:41:15,176 - #46 int
INFO  00:41:15,176 - #46 fld
INFO  00:41:15,176 - #11 ,
INFO  00:41:15,177 - #46 a
INFO  00:41:15,177 - #5 ;
INFO  00:41:15,177 - #3 {
INFO  00:41:15,177 - #13 void
INFO  00:41:15,177 - #46 method
INFO  00:41:15,178 - #6 (
INFO  00:41:15,178 - #7 )
INFO  00:41:15,179 - #3 {
INFO  00:41:15,179 - #9 return
INFO  00:41:15,179 - #5 ;
INFO  00:41:15,179 - #4 }
INFO  00:41:15,180 - #4 }
INFO  00:41:15,180 - #4 }
INFO  00:41:15,180 - #3 {
INFO  00:41:15,180 - #46 int
INFO  00:41:15,180 - #46 met
INFO  00:41:15,180 - #6 (
INFO  00:41:15,180 - #46 int
INFO  00:41:15,180 - #46 a
INFO  00:41:15,181 - #7 )
INFO  00:41:15,181 - #3 {
INFO  00:41:15,181 - #9 return
INFO  00:41:15,181 - #43 1
INFO  00:41:15,182 - #5 ;
INFO  00:41:15,183 - #4 }
INFO  00:41:15,183 - #46 int
INFO  00:41:15,183 - #46 main
INFO  00:41:15,183 - #6 (
INFO  00:41:15,183 - #7 )
INFO  00:41:15,183 - #46 Klasa1
INFO  00:41:15,183 - #46 z
INFO  00:41:15,183 - #5 ;
INFO  00:41:15,183 - #3 {
INFO  00:41:15,183 - #46 z
INFO  00:41:15,183 - #30 =
INFO  00:41:15,184 - #40 new
INFO  00:41:15,185 - #46 Klasa
INFO  00:41:15,185 - #5 ;
INFO  00:41:15,185 - #9 return
INFO  00:41:15,185 - #43 1
INFO  00:41:15,185 - #5 ;
INFO  00:41:15,185 - #4 }
INFO  00:41:15,185 - #4 }
INFO  00:41:15,190 - Program(
  ProgramName(
   MJProgram
  ) [ProgramName]
  DeclLists(
    DeclLists(
      DeclLists(
        DeclLists(
          DeclLists(
            NoDeclLists(
            ) [NoDeclLists]
            VarDeclar(
              VarDecl(
                VarType(
                  Type(
                   int
                  ) [Type]
                ) [VarType]
                SingleVarDeclaration(
                  VarDeclarationDecl(
                   x
                  ) [VarDeclarationDecl]
                ) [SingleVarDeclaration]
              ) [VarDecl]
            ) [VarDeclar]
          ) [DeclLists]
          ClassDeclar(
            ClassDecl(
              ClassName(
               Klasa1
              ) [ClassName]
              NoClassExtends(
              ) [NoClassExtends]
              NoVarList(
              ) [NoVarList]
              NoClassMethods(
              ) [NoClassMethods]
            ) [ClassDecl]
          ) [ClassDeclar]
        ) [DeclLists]
        RecordDeclar(
          RecordDeclaration(
            RecordName(
             Rec
            ) [RecordName]
            VarList(
              VarList(
                VarList(
                  NoVarList(
                  ) [NoVarList]
                  VarDecl(
                    VarType(
                      Type(
                       int
                      ) [Type]
                    ) [VarType]
                    SingleVarDeclaration(
                      VarDeclarationDecl(
                       recFld
                      ) [VarDeclarationDecl]
                    ) [SingleVarDeclaration]
                  ) [VarDecl]
                ) [VarList]
                VarDecl(
                  VarType(
                    Type(
                     char
                    ) [Type]
                  ) [VarType]
                  SingleVarDeclaration(
                    VarDeclarationDecl(
                     recFldChar
                    ) [VarDeclarationDecl]
                  ) [SingleVarDeclaration]
                ) [VarDecl]
              ) [VarList]
              VarDecl(
                VarType(
                  Type(
                   int
                  ) [Type]
                ) [VarType]
                SingleVarDeclaration(
                  ArrayDeclaration(
                   arrRec
                  ) [ArrayDeclaration]
                ) [SingleVarDeclaration]
              ) [VarDecl]
            ) [VarList]
          ) [RecordDeclaration]
        ) [RecordDeclar]
      ) [DeclLists]
      RecordDeclar(
        RecordDeclaration(
          RecordName(
           Rec2
          ) [RecordName]
          VarList(
            VarList(
              VarList(
                NoVarList(
                ) [NoVarList]
                VarDecl(
                  VarType(
                    Type(
                     int
                    ) [Type]
                  ) [VarType]
                  SingleVarDeclaration(
                    VarDeclarationDecl(
                     recFld
                    ) [VarDeclarationDecl]
                  ) [SingleVarDeclaration]
                ) [VarDecl]
              ) [VarList]
              VarDecl(
                VarType(
                  Type(
                   char
                  ) [Type]
                ) [VarType]
                SingleVarDeclaration(
                  VarDeclarationDecl(
                   recFldChar
                  ) [VarDeclarationDecl]
                ) [SingleVarDeclaration]
              ) [VarDecl]
            ) [VarList]
            VarDecl(
              VarType(
                Type(
                 int
                ) [Type]
              ) [VarType]
              SingleVarDeclaration(
                ArrayDeclaration(
                 arrRec
                ) [ArrayDeclaration]
              ) [SingleVarDeclaration]
            ) [VarDecl]
          ) [VarList]
        ) [RecordDeclaration]
      ) [RecordDeclar]
    ) [DeclLists]
    ClassDeclar(
      ClassDecl(
        ClassName(
         Klasa
        ) [ClassName]
        ClassExtends(
          ClassExtensionType(
            Type(
             Klasa1
            ) [Type]
          ) [ClassExtensionType]
        ) [ClassExtends]
        VarList(
          NoVarList(
          ) [NoVarList]
          VarDecl(
            VarType(
              Type(
               int
              ) [Type]
            ) [VarType]
            VarDeclarationList(
              SingleVarDeclaration(
                VarDeclarationDecl(
                 fld
                ) [VarDeclarationDecl]
              ) [SingleVarDeclaration]
              VarDeclarationDecl(
               a
              ) [VarDeclarationDecl]
            ) [VarDeclarationList]
          ) [VarDecl]
        ) [VarList]
        ClassMethodsDecl(
          MethodListDecl(
            NoMethodDecl(
            ) [NoMethodDecl]
            MethodDeclaration(
              MethodTypeName(
                VoidType(
                ) [VoidType]
               method
              ) [MethodTypeName]
              NoFormParsAndVarArgs(
              ) [NoFormParsAndVarArgs]
              NoVarList(
              ) [NoVarList]
              StatementListDecl(
                NoStatementList(
                ) [NoStatementList]
                ReturnVoidStatement(
                ) [ReturnVoidStatement]
              ) [StatementListDecl]
            ) [MethodDeclaration]
          ) [MethodListDecl]
        ) [ClassMethodsDecl]
      ) [ClassDecl]
    ) [ClassDeclar]
  ) [DeclLists]
  MethodListDecl(
    MethodListDecl(
      NoMethodDecl(
      ) [NoMethodDecl]
      MethodDeclaration(
        MethodTypeName(
          MethodType(
            Type(
             int
            ) [Type]
          ) [MethodType]
         met
        ) [MethodTypeName]
        OnlyFormalParam(
          SingleFormalParamDecl(
            FormalParamDeclaration(
              Type(
               int
              ) [Type]
             a
            ) [FormalParamDeclaration]
          ) [SingleFormalParamDecl]
        ) [OnlyFormalParam]
        NoVarList(
        ) [NoVarList]
        StatementListDecl(
          NoStatementList(
          ) [NoStatementList]
          ReturnStatement(
            MinusExprDeclaration(
              NoMinus(
              ) [NoMinus]
              SingleTermDeclaration(
                SingleFactorDecl(
                  NumberFactor(
                   1
                  ) [NumberFactor]
                ) [SingleFactorDecl]
              ) [SingleTermDeclaration]
              NoExpr(
              ) [NoExpr]
            ) [MinusExprDeclaration]
          ) [ReturnStatement]
        ) [StatementListDecl]
      ) [MethodDeclaration]
    ) [MethodListDecl]
    MethodDeclaration(
      MethodTypeName(
        MethodType(
          Type(
           int
          ) [Type]
        ) [MethodType]
       main
      ) [MethodTypeName]
      NoFormParsAndVarArgs(
      ) [NoFormParsAndVarArgs]
      VarList(
        NoVarList(
        ) [NoVarList]
        VarDecl(
          VarType(
            Type(
             Klasa1
            ) [Type]
          ) [VarType]
          SingleVarDeclaration(
            VarDeclarationDecl(
             z
            ) [VarDeclarationDecl]
          ) [SingleVarDeclaration]
        ) [VarDecl]
      ) [VarList]
      StatementListDecl(
        StatementListDecl(
          NoStatementList(
          ) [NoStatementList]
          StatementDesignatorStatement(
            DesignatorStatementAssign(
              AssignDesignatorDecl(
                DesignatorExpr(
                  DesignatorName(
                   z
                  ) [DesignatorName]
                  NoDesignator(
                  ) [NoDesignator]
                ) [DesignatorExpr]
                AssignopDecl(
                ) [AssignopDecl]
                MinusExprDeclaration(
                  NoMinus(
                  ) [NoMinus]
                  SingleTermDeclaration(
                    SingleFactorDecl(
                      NewExpr(
                        Type(
                         Klasa
                        ) [Type]
                      ) [NewExpr]
                    ) [SingleFactorDecl]
                  ) [SingleTermDeclaration]
                  NoExpr(
                  ) [NoExpr]
                ) [MinusExprDeclaration]
              ) [AssignDesignatorDecl]
            ) [DesignatorStatementAssign]
          ) [StatementDesignatorStatement]
        ) [StatementListDecl]
        ReturnStatement(
          MinusExprDeclaration(
            NoMinus(
            ) [NoMinus]
            SingleTermDeclaration(
              SingleFactorDecl(
                NumberFactor(
                 1
                ) [NumberFactor]
              ) [SingleFactorDecl]
            ) [SingleTermDeclaration]
            NoExpr(
            ) [NoExpr]
          ) [MinusExprDeclaration]
        ) [ReturnStatement]
      ) [StatementListDecl]
    ) [MethodDeclaration]
  ) [MethodListDecl]
) [Program]
INFO  00:41:15,191 - ===================================
INFO  00:41:15,200 - Pretraga na liniji 1 (MJProgram), nadjeno Prog MJProgram: notype, 0, 1 
INFO  00:41:15,200 - Pretraga na liniji 3 (x), nadjeno Var x: int, 0, 0
INFO  00:41:15,200 - Pretraga na liniji 5 (Klasa1), nadjeno Type Klasa1: Class [], 0, 0
INFO  00:41:15,200 - Pretraga na liniji 5 (Klasa1), nadjeno Type Klasa1: Class [], 0, 0
INFO  00:41:15,200 - Pretraga na liniji 9 (Rec), nadjeno Type Rec: Class [], 0, 0
INFO  00:41:15,200 - Pretraga na liniji 10 (recFld), nadjeno Fld recFld: int, 0, 1
INFO  00:41:15,200 - Pretraga na liniji 11 (recFldChar), nadjeno Fld recFldChar: char, 1, 1
INFO  00:41:15,200 - Pretraga na liniji 12 (arrRec), nadjeno Var arrRec: Arr of int, 2, 1
INFO  00:41:15,200 - Pretraga na liniji 9 (Rec), nadjeno Type Rec: Class [], 0, 0 Fld recFld: int, 0, 1 
Fld recFldChar: char, 1, 1 
Var arrRec: Arr of int, 2, 1 
INFO  00:41:15,200 - Pretraga na liniji 15 (Rec2), nadjeno Type Rec2: Class [], 0, 0
INFO  00:41:15,201 - Pretraga na liniji 16 (recFld), nadjeno Fld recFld: int, 0, 1
INFO  00:41:15,201 - Pretraga na liniji 17 (recFldChar), nadjeno Fld recFldChar: char, 1, 1
INFO  00:41:15,201 - Pretraga na liniji 18 (arrRec), nadjeno Var arrRec: Arr of int, 2, 1
INFO  00:41:15,201 - Pretraga na liniji 15 (Rec2), nadjeno Type Rec2: Class [], 0, 0 Fld recFld: int, 0, 1 
Fld recFldChar: char, 1, 1 
Var arrRec: Arr of int, 2, 1 
INFO  00:41:15,201 - Pretraga na liniji 22 (Klasa), nadjeno Type Klasa: Class [], 0, 0
INFO  00:41:15,201 - Pretraga na liniji 23 (fld), nadjeno Fld fld: int, 0, 1
INFO  00:41:15,201 - Pretraga na liniji 23 (a), nadjeno Fld a: int, 1, 1
INFO  00:41:15,201 - Pretraga na liniji 26 (method), nadjeno Meth method: notype, 0, 0 
INFO  00:41:15,201 - Pretraga na liniji 22 (Klasa), nadjeno Type Klasa: Class [], 0, 0 Fld fld: int, 0, 1 
Fld a: int, 1, 1 
Meth method: notype, 0, 0 

INFO  00:41:15,201 - Pretraga na liniji 34 (met), nadjeno Meth met: int, 0, 0 
INFO  00:41:15,201 - Pretraga na liniji 34 (a), nadjeno Var a: int, 0, 1
INFO  00:41:15,201 - Pretraga na liniji 38 (main), nadjeno Meth main: int, 0, 0 
INFO  00:41:15,202 - Pretraga na liniji 38 (z), nadjeno Var z: Class [], 0, 1
