INFO  18:43:29,063 - Compiling source file: C:\Users\Aleksa\Desktop\PP Projekat\MJCompiler\test\program.mj
INFO  18:43:29,102 - #2 program
INFO  18:43:29,102 - #46 test302
INFO  18:43:29,102 - #46 bool
INFO  18:43:29,103 - #46 flag
INFO  18:43:29,104 - #5 ;
INFO  18:43:29,104 - #46 int
INFO  18:43:29,105 - #46 niz
INFO  18:43:29,105 - #15 [
INFO  18:43:29,105 - #16 ]
INFO  18:43:29,105 - #5 ;
INFO  18:43:29,105 - #46 int
INFO  18:43:29,105 - #46 a
INFO  18:43:29,105 - #5 ;
INFO  18:43:29,105 - #3 {
INFO  18:43:29,106 - #13 void
INFO  18:43:29,106 - #46 meth
INFO  18:43:29,107 - #6 (
INFO  18:43:29,107 - #46 int
INFO  18:43:29,107 - #46 x
INFO  18:43:29,107 - #7 )
INFO  18:43:29,108 - #3 {
INFO  18:43:29,108 - #12 print
INFO  18:43:29,109 - #6 (
INFO  18:43:29,109 - #46 x
INFO  18:43:29,110 - #7 )
INFO  18:43:29,111 - #5 ;
INFO  18:43:29,112 - #4 }
INFO  18:43:29,112 - #13 void
INFO  18:43:29,112 - #46 main
INFO  18:43:29,112 - #6 (
INFO  18:43:29,112 - #7 )
INFO  18:43:29,112 - #3 {
INFO  18:43:29,112 - #46 meth
INFO  18:43:29,113 - #6 (
INFO  18:43:29,113 - #43 1
INFO  18:43:29,113 - #7 )
INFO  18:43:29,113 - #5 ;
INFO  18:43:29,113 - #4 }
INFO  18:43:29,114 - #4 }
INFO  18:43:29,118 - Program(
  ProgramName(
   test302
  ) [ProgramName]
  DeclLists(
    DeclLists(
      DeclLists(
        NoDeclLists(
        ) [NoDeclLists]
        VarDeclar(
          VarDecl(
            VarType(
              Type(
               bool
              ) [Type]
            ) [VarType]
            SingleVarDeclaration(
              VarDeclarationDecl(
               flag
              ) [VarDeclarationDecl]
            ) [SingleVarDeclaration]
          ) [VarDecl]
        ) [VarDeclar]
      ) [DeclLists]
      VarDeclar(
        VarDecl(
          VarType(
            Type(
             int
            ) [Type]
          ) [VarType]
          SingleVarDeclaration(
            ArrayDeclaration(
             niz
            ) [ArrayDeclaration]
          ) [SingleVarDeclaration]
        ) [VarDecl]
      ) [VarDeclar]
    ) [DeclLists]
    VarDeclar(
      VarDecl(
        VarType(
          Type(
           int
          ) [Type]
        ) [VarType]
        SingleVarDeclaration(
          VarDeclarationDecl(
           a
          ) [VarDeclarationDecl]
        ) [SingleVarDeclaration]
      ) [VarDecl]
    ) [VarDeclar]
  ) [DeclLists]
  MethodListDecl(
    MethodListDecl(
      NoMethodDecl(
      ) [NoMethodDecl]
      MethodDeclaration(
        MethodTypeName(
          VoidType(
          ) [VoidType]
         meth
        ) [MethodTypeName]
        OnlyFormalParam(
          SingleFormalParamDecl(
            FormalParamDeclaration(
              Type(
               int
              ) [Type]
             x
            ) [FormalParamDeclaration]
          ) [SingleFormalParamDecl]
        ) [OnlyFormalParam]
        NoVarList(
        ) [NoVarList]
        StatementListDecl(
          NoStatementList(
          ) [NoStatementList]
          PrintStmt(
            MinusExprDeclaration(
              NoMinus(
              ) [NoMinus]
              SingleTermDeclaration(
                SingleFactorDecl(
                  Var(
                    OnlyIdent(
                      DesignatorName(
                       x
                      ) [DesignatorName]
                    ) [OnlyIdent]
                  ) [Var]
                ) [SingleFactorDecl]
              ) [SingleTermDeclaration]
              NoExpr(
              ) [NoExpr]
            ) [MinusExprDeclaration]
            NoNumConstOpt(
            ) [NoNumConstOpt]
          ) [PrintStmt]
        ) [StatementListDecl]
      ) [MethodDeclaration]
    ) [MethodListDecl]
    MethodDeclaration(
      MethodTypeName(
        VoidType(
        ) [VoidType]
       main
      ) [MethodTypeName]
      NoFormParsAndVarArgs(
      ) [NoFormParsAndVarArgs]
      NoVarList(
      ) [NoVarList]
      StatementListDecl(
        NoStatementList(
        ) [NoStatementList]
        StatementDesignatorStatement(
          DesignatorStatementPars(
            MethodCallDesignator(
              OnlyIdent(
                DesignatorName(
                 meth
                ) [DesignatorName]
              ) [OnlyIdent]
            ) [MethodCallDesignator]
            ActParsListDeclaration(
              ActualParam(
                MinusExprDeclaration(
                  NoMinus(
                  ) [NoMinus]
                  SingleTermDeclaration(
                    SingleFactorDecl(
                      NumberFactor(
                       1
                      ) [NumberFactor]
                    ) [SingleFactorDecl]
                  ) [SingleTermDeclaration]
                  NoExpr(
                  ) [NoExpr]
                ) [MinusExprDeclaration]
              ) [ActualParam]
            ) [ActParsListDeclaration]
          ) [DesignatorStatementPars]
        ) [StatementDesignatorStatement]
      ) [StatementListDecl]
    ) [MethodDeclaration]
  ) [MethodListDecl]
) [Program]
INFO  18:43:29,119 - ===================================
INFO  18:43:29,122 - Pretraga na liniji 3 (test302), nadjeno Prog test302: notype, 0, 1 
INFO  18:43:29,122 - Pretraga na liniji 5 (flag), nadjeno Var flag: , 0, 0
INFO  18:43:29,122 - Pretraga na liniji 7 (niz), nadjeno Var niz: Arr of int, 1, 0
INFO  18:43:29,122 - Pretraga na liniji 9 (a), nadjeno Var a: int, 2, 0
INFO  18:43:29,122 - Pretraga na liniji 14 (meth), nadjeno Meth meth: notype, 0, 0 
INFO  18:43:29,122 - Pretraga na liniji 14 (x), nadjeno Var x: int, 0, 1
INFO  18:43:29,123 - Pretraga na liniji 18 (main), nadjeno Meth main: notype, 0, 0 
INFO  18:43:29,123 - Pretraga na liniji 20 (meth), nadjeno Meth meth: notype, 0, 1 
   Var x: int, 0, 1 
INFO  18:43:29,123 -  Deklarisanih promenljivih ima = 3
INFO  18:43:29,123 -  Globalnih promenljivih ima = 3
INFO  18:43:29,123 - ===================================
INFO  18:43:29,123 - Semanticka analiza je uspesno zavrsena!
INFO  18:43:29,127 - designatorExpr
INFO  18:43:29,127 - Var
INFO  18:43:29,127 - EXPR
INFO  18:43:29,127 - PRINT
INFO  18:43:29,128 - designatorExpr
INFO  18:43:29,128 - EXPR
